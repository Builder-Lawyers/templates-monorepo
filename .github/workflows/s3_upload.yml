name: Upload Changed Templates to S3

on:
  push:
    branches:
      - master
    paths-ignore:
      - '.github/**'
      - .gitignore

jobs:
  upload:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2 # Diff with previous commit

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:  ${{ vars.AWS_REGION }}

      - name: Upload changed files to S3
        run: |
          # Get changed files excluding boilerplate-template directory
          CHANGED_FILES=$(git diff --name-only --diff-filter=AM HEAD~1 HEAD -- . ':!boilerplate-template/**' | tr '\n' ' ')
          
          if [ -n "$CHANGED_FILES" ]; then
            for file in $CHANGED_FILES; do
              echo "Uploading $file to S3..."
              aws s3 cp "$file" "s3://${{vars.BUCKET_NAME}}/templates-sources/${file#./}"
            done
          else
            echo "No changed files to upload."
          fi

      - name: Delete removed files from S3
        run: |
          DELETED_FILES=$(git diff --name-only --diff-filter=D HEAD~1 HEAD -- . ':!boilerplate-template/**' | tr '\n' ' ')
          if [ -n "$DELETED_FILES" ]; then
            for file in $DELETED_FILES; do
              echo "Deleting $file from S3..."
              aws s3 rm "s3://${{vars.BUCKET_NAME}}/templates-sources/${file#./}"
            done
          else
            echo "No deleted files to remove."
          fi

      - name: Detect modified templates
        id: detect
        run: |
          MODIFIED=$(git diff --name-only --diff-filter=AM HEAD~1 HEAD -- "templates/**" \
            | sed -E 's#^templates/([^/]+)/.*#\1#' \
            | sort -u)

          echo "Modified template dirs:"
          echo "$MODIFIED"

          # Export as JSON array if needed
          echo "templates=$(printf '%s\n' "$MODIFIED" | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT

      - name: Send SQS message with changed templates
        if: ${{ steps.detect.outputs.templates != '' }}
        run: |
          COMMIT=$(git rev-parse HEAD)
          TEMPLATES='${{ steps.detect.outputs.templates }}'
          
          BODY=$(jq -n \
            --arg commit "$COMMIT" \
            --arg templates "$TEMPLATES" \
            '{commit: $commit, templates: ($templates | split(","))}')
          
          echo $BODY
          
          aws sqs send-message \
            --queue-url "${{ vars.SQS_QUEUE_URL }}" \
            --message-body "$BODY"